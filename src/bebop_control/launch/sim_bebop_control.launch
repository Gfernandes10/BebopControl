<launch>
<!-- Gazebo World args -->
    <arg name="world_name" default="C222_simple"/>
    <arg name="paused" default="false"/> 
    <arg name="verbose" default="false"/>
<!-- Spawn Drone args -->
    <arg name="drone" default="bebop2"/>
    <arg name="enable_ground_truth" default="true" />
    <arg name="enable_logging" default="false" />

<!-- Joystick args -->
    <arg name="joy" default="/dev/input/js2" />
    <arg name="joy_yaml" default="$(find bebop_control)/resources/ps4.yaml" />

<!-- Initiate Joystick -->
    <node name="joy_node" pkg="joy" type="joy_node">
      <param name="dev" value="$(arg joy)" />
    </node>

     <node name="bebop_control" pkg="bebop_control" type="bebop_control" output="screen">
        <rosparam command="load" file="$(arg joy_yaml)" />
        <!-- Add any necessary parameters here -->
    </node>
<!-- Initiate Gazebo World -->
    <env name="GAZEBO_MODEL_PATH" value="$(find rotors_gazebo)/models"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world"/>
        <arg name="paused" value="$(arg paused)" />
        <arg name="verbose" value="$(arg verbose)"/>
    </include>

<!-- Initiate Spawn Drone -->
  <group ns="$(arg drone)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg drone)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
    </include>
    <node name="fake_driver" pkg="rotors_gazebo" type="fake_driver" output="screen" >
      <rosparam command="load" file="$(arg joy_yaml)" />
      <remap from="~joy"  to="joy" />
      <remap from="~odom" to="ground_truth/odometry" />
      <remap from="~command/trajectory" to="command/trajectory" />
      <rosparam> 
        max_vel: 3.0
        max_yawrate: 0.66
      </rosparam>
    </node>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg drone).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg drone).yaml" />
      <remap from="odometry" to="ground_truth/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>
</launch>